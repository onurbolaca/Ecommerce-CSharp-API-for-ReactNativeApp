@using Ecommerce.Entity.Result
@using Ecommerce.Entity.Classes
@model Ecommerce.Entity.Classes.Product
@{
	ViewBag.Title = "Insert";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row" style="margin-top:5%;">
	<div class="col-md-12">
		@using (Html.BeginForm("Update", "Product", FormMethod.Post))
		{

			if (ViewBag.Result != null)
			{
				var resultobject = ViewBag.Result as ResultObject<Product>;

				if (resultobject.ResultStatus == Ecommerce.Entity.Enums.ResultStatus.Success)
				{
					<div class="alert alert-success">@resultobject.Message</div>
				}

				else if (resultobject.ResultStatus == Ecommerce.Entity.Enums.ResultStatus.Info)
				{
					<div class="alert alert-info">@resultobject.Message</div>
				}

				else if (resultobject.ResultStatus == Ecommerce.Entity.Enums.ResultStatus.Warning)
				{
					<div class="alert alert-warning">@resultobject.Message</div>
				}

				else
				{
					<div class="alert alert-danger">@resultobject.Message</div>
				}

			}

			@Html.HiddenFor(model => model.ID)


			<div class="form-group">
				@Html.LabelFor(model => model.CategoryID)
				@Html.DropDownListFor(model => model.CategoryID, (SelectList)ViewBag.Categories, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.CategoryID)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProductName)
				@Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ProductName)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProductDescription)
				@Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ProductDescription)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.UnitPrice)
				@Html.TextBoxFor(model => model.UnitPrice, new { @class = "form-control", @type = "number" })
				@Html.ValidationMessageFor(model => model.UnitPrice)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.StockAmount)
				@Html.TextBoxFor(model => model.StockAmount, new { @class = "form-control", @type = "number" })
				@Html.ValidationMessageFor(model => model.StockAmount)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.MinimumStockAmount)
				@Html.TextBoxFor(model => model.MinimumStockAmount, new { @class = "form-control", @type = "number" })
				@Html.ValidationMessageFor(model => model.MinimumStockAmount)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.VatRate)
				@Html.TextBoxFor(model => model.VatRate, new { @class = "form-control", @type = "number" })
				@Html.ValidationMessageFor(model => model.VatRate)
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ExpiredDate)
				@Html.TextBoxFor(model => model.ExpiredDate, new { @class = "form-control", @type = "date" })
				@Html.ValidationMessageFor(model => model.ExpiredDate)
			</div>


			@Html.HiddenFor(model => model.CreatedOn)
			@Html.HiddenFor(model => model.CreatedBy)
			@Html.HiddenFor(model => model.ObjectStatus)
			@Html.HiddenFor(model => model.Status)

			<div class="form-group">
				<button type="submit" class="btn btn-primary">Kaydet</button>
			</div>
		}
	</div>
</div>

